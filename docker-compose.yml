version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka1:
    image: bitnami/kafka:3.4.0
    depends_on:
      - zookeeper
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
  kafka2:
    image: bitnami/kafka:3.4.0
    depends_on:
      - zookeeper
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9093
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2

  postgreSQL:
    image: postgres:13
    environment:
      POSTGRES_DB: user_db
    env_file:
      - .env
    volumes:
      - ./infra/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --notify-keyspace-events KEA

  user-service:
    build:
      context: ./services
      dockerfile: ./Dockerfile.python
      args:
        SERVICE_NAME: user-service
    env_file:
      - .env
    volumes:
      - ./services/user-service/:/app
      - ./libs:/app/libs
    depends_on:
      - postgreSQL

  event-service:
    build:
      context: ./services
      dockerfile: ./Dockerfile.python
      args:
        SERVICE_NAME: event-service
    env_file:
      - .env
    volumes:
      - ./services/event-service/:/app
      - ./libs:/app/libs
    depends_on:
      - postgreSQL
      - kafka1
      - kafka2

  nginx:
    build: ./infra/nginx
    ports:
      - "80:80"
    depends_on:
      - user-service
